@model shop.Models.Translator.TranslatorViewModel
@{
    ViewData["Title"] = "Translator";

    var languageOptions = new Dictionary<string, string>
    {
        { "uk", "Українська" },
        { "en", "English" },
        { "es", "Spanish" }
    };
}

<div class="text-center">
    <h1 class="display-4">Когнітивні сервіси. Перекладач.</h1>
</div>

@if (Model.FormModel != null && Model.ErrorMessage != null)
{
    <p class="alert alert-danger">
        @Model.ErrorMessage
    </p>
}

<form name="formTranslation">
    <div class="row">
        <div class="col col-3 text-center">
            <select class="form-select" name="LangFrom">
                @foreach (var option in languageOptions)
                {
                    <option value="@option.Key">@option.Value</option>
                }
            </select>
            <textarea class="form-control" rows="4" name="OriginalText" style="white-space:nowrap">
                @Model.FormModel.OriginalText
            </textarea>
        </div>
        <div class="col col-1 text-center">
            <button name="TranslateButton" value="TranslateButton"><i class="bi bi-arrow-right-square"></i></button>
            <br />
            <br />
            <button name="InverseButton" value="InverseButton"><i class="bi bi-arrow-left-right"></i></button>
        </div>
        <div class="col col-3 text-center">
            <select class="form-select" name="LangTo">
                @foreach (var option in languageOptions)
                {
                    <option value="@option.Key">@option.Value</option>
                }
            </select>
            <textarea class="form-control" rows="4" name="TranslatedText" style="white-space:nowrap">
                @Model.FormModel.TranslatedText
            </textarea>
        </div>
    </div>
</form>

<script>
    let selectLangFrom = document.getElementsByName("LangFrom");
    let selectLangTo = document.getElementsByName("LangTo");

    let translateButton = "@Model.FormModel.TranslateButton";
    let inverseButton = "@Model.FormModel.InverseButton";

    let elementInverseButton = document.getElementsByName('InverseButton');
    let originalTargetLang;
    let targetLang;

    let form = document.getElementsByName("formTranslation");

    if (translateButton == "yes") {
        for (let i = 0; i < @languageOptions.Count; i++) {
            if (selectLangFrom[0][i].value == "@Model.FormModel.LangFrom") {
                selectLangFrom[0][i].setAttribute('selected', true);
            }
            if (selectLangTo[0][i].value == "@Model.FormModel.LangTo") {
                selectLangTo[0][i].setAttribute('selected', true);
                originalTargetLang = selectLangTo[0][i].value;
            }
        }
    }

    if (inverseButton == "yes") {
        for (let i = 0; i < @languageOptions.Count; i++) {
            if (selectLangFrom[0][i].value == "@Model.FormModel.LangFrom") {
                selectLangFrom[0][i].setAttribute('selected', true);
            }
            if (selectLangTo[0][i].value == "@Model.FormModel.LangTo") {
                selectLangTo[0][i].setAttribute('selected', true);
                originalTargetLang = selectLangTo[0][i].value;
            }
        }
    }
    document.addEventListener('DOMContentLoaded', function () {
        elementInverseButton[0].addEventListener('click', function () {
            targetLang = document.getElementsByName("LangTo")[0].value;
            console.log("targetLang - " + targetLang + " originalTargetLang - " + originalTargetLang);
            if (targetLang != originalTargetLang) {
                if (form[0]) { event.preventDefault(); }
                alert("Can't inverse with changed language!");
            }
        });
    });
</script>